# Generated by Django 3.2 on 2021-04-16 20:49

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('organizations', '0001_initial'),
        ('specs', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AbylimpixStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('medalist', 'Призер'), ('winner', 'Победитель')], max_length=8, verbose_name='Статус')),
                ('competition', models.CharField(max_length=128, verbose_name='Компетенция')),
            ],
            options={
                'verbose_name': 'Участие в чемпионате "Абилимпикс"',
                'verbose_name_plural': 'Участие в чемпионате "Абилимпикс"',
            },
        ),
        migrations.CreateModel(
            name='EducationDoc',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('credential', 'Аттестат')], max_length=10, verbose_name='Тип')),
                ('num', models.CharField(max_length=50, verbose_name='Номер')),
            ],
            options={
                'verbose_name': 'Документ об образовании',
                'verbose_name_plural': 'Документы об образовании',
            },
        ),
        migrations.CreateModel(
            name='Enrollee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=128, verbose_name='Имя')),
                ('last_name', models.CharField(max_length=128, verbose_name='Фамилия')),
                ('middle_name', models.CharField(max_length=128, verbose_name='Отчество')),
                ('birth_date', models.DateField(verbose_name='Дата рождения')),
                ('birth_place', models.CharField(max_length=128, verbose_name='Место рождения')),
                ('citizenship', models.CharField(max_length=128, verbose_name='Российская Федерация')),
                ('residence_place', models.CharField(max_length=256, verbose_name='Место проживания')),
                ('personal_phone', models.CharField(max_length=50, verbose_name='Личный телефон')),
                ('home_phone', models.CharField(blank=True, max_length=50, null=True, verbose_name='Домашний телефон')),
                ('grade', models.PositiveSmallIntegerField(choices=[(0, '5 классов'), (1, '9 классов'), (2, '11 классов'), (3, 'Среднее специальное образование'), (4, 'Неоконченное высшее'), (5, 'Высшее')], verbose_name='Уровень образование')),
                ('english', models.BooleanField(verbose_name='Английский язык')),
                ('has_goal_contract', models.BooleanField(verbose_name='Наличие договора о целевом обучении')),
                ('need_residence', models.BooleanField(verbose_name='Общежитие')),
                ('is_orphan', models.BooleanField(verbose_name='Дети-сироты, дети, оставшиеся без попечения родителей, лица из их числа')),
                ('is_handicapped', models.BooleanField(verbose_name='Инвалиды')),
                ('is_ovz', models.BooleanField(verbose_name='Лица с ОВЗ (имеется ПМПК)')),
                ('choreography_doc', models.CharField(blank=True, max_length=128, null=True, verbose_name='Хореография (подтверждающий документ)')),
                ('vocal_doc', models.CharField(blank=True, max_length=128, null=True, verbose_name='Вокальные данные (подтверждающий документ)')),
                ('kvn_doc', models.CharField(blank=True, max_length=128, null=True, verbose_name='Участие в КВН (подтверждающий документ)')),
                ('art_doc', models.CharField(blank=True, max_length=128, null=True, verbose_name='Художественные навыки (подтверждающий документ)')),
                ('theatre_doc', models.CharField(blank=True, max_length=128, null=True, verbose_name='Участие в театральных постановках (подтверждающий документ)')),
                ('parents_email', models.EmailField(max_length=254, verbose_name='Адрес электронной почты родителей')),
                ('is_first_time', models.BooleanField(verbose_name='Среднее профессиональное образование получаю впервые')),
                ('application_dt', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Дата подачи заявления')),
                ('abylimpix_status', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='enrollee.abylimpixstatus', verbose_name='Участие в чемпионате "Абилимпикс"')),
                ('education_doc', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='enrollee.educationdoc', verbose_name='Документ об образовании')),
                ('education_org', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='organizations.educationorg', verbose_name='Образовательная организация')),
            ],
            options={
                'verbose_name': 'Абитуриент',
                'verbose_name_plural': 'Абитуриенты',
                'ordering': ('-application_dt',),
            },
        ),
        migrations.CreateModel(
            name='EnrolleePassport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('series', models.CharField(max_length=4, verbose_name='Серия')),
                ('num', models.CharField(max_length=6, verbose_name='№')),
                ('issued_at', models.DateField(verbose_name='Когда выдан')),
                ('issued_by', models.CharField(max_length=128, verbose_name='Кем выдан')),
            ],
            options={
                'verbose_name': 'Паспорт поступающего',
                'verbose_name_plural': 'Паспорта поступающих',
            },
        ),
        migrations.CreateModel(
            name='GosOlympiadStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('medalist', 'Призер'), ('winner', 'Победитель')], max_length=8, verbose_name='Статус')),
                ('level', models.CharField(choices=[('country', 'Всероссийской'), ('region', 'Областной')], max_length=7, verbose_name='Уровень')),
                ('subject', models.CharField(max_length=50, verbose_name='Наименование предмета')),
            ],
            options={
                'verbose_name': 'Участие в государственных олимпиадах',
                'verbose_name_plural': 'Участие в государственных олимпиадах',
            },
        ),
        migrations.CreateModel(
            name='GraduatedInstitution',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('graduated_at', models.CharField(max_length=4, verbose_name='Год окончания')),
                ('insitution', models.CharField(max_length=256, verbose_name='Учреждение')),
            ],
            options={
                'verbose_name': 'Оконченное учебное заведение',
                'verbose_name_plural': 'Оконченные учебные заведения',
            },
        ),
        migrations.CreateModel(
            name='ParentData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=128, verbose_name='Имя')),
                ('last_name', models.CharField(max_length=128, verbose_name='Фамилия')),
                ('middle_name', models.CharField(max_length=128, verbose_name='Отчество')),
                ('residence', models.CharField(max_length=128, verbose_name='Место жительства')),
                ('enterprise_name', models.CharField(blank=True, max_length=128, null=True, verbose_name='Наименование предприятия')),
                ('position_held', models.CharField(blank=True, max_length=128, null=True, verbose_name='Занимаемая позиция')),
                ('phone', models.CharField(max_length=50, verbose_name='Личный контактный телефон')),
            ],
            options={
                'verbose_name': 'Информация о родителях',
                'verbose_name_plural': 'Информация о родителях',
            },
        ),
        migrations.CreateModel(
            name='WsrOlympiadsStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('medalist', 'Призер'), ('winner', 'Победитель')], max_length=8, verbose_name='Статус')),
                ('competition', models.CharField(max_length=128, verbose_name='Компетенция')),
            ],
            options={
                'verbose_name': 'Участие в чемпионате "Молодые профессионалы (WSR)"',
                'verbose_name_plural': 'Участие в чемпионате "Молодые профессионалы (WSR)"',
            },
        ),
        migrations.CreateModel(
            name='SportAchievement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=128, verbose_name='Вид спорта')),
                ('approve_doc', models.CharField(max_length=128, verbose_name='Подтверждающий документ')),
                ('enrollee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='enrollee.enrollee', verbose_name='Абитуриент')),
            ],
            options={
                'verbose_name': 'Спортивное достижение',
                'verbose_name_plural': 'Спортивные достижения',
            },
        ),
        migrations.CreateModel(
            name='EnrolleeSpecialization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('priority', models.PositiveSmallIntegerField(verbose_name='Приоритет')),
                ('education_form', models.CharField(choices=[('budget', 'Бюджетная'), ('contract', 'Платная основа')], max_length=8, verbose_name='Форма обучения')),
                ('enrollee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='enrollee.enrollee', verbose_name='Абитуриент')),
                ('specialization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='specs.specialization', verbose_name='Специализация')),
            ],
            options={
                'verbose_name': 'Специализация абитуриента',
                'verbose_name_plural': 'Специализации абитуриентов',
                'ordering': ('priority',),
            },
        ),
        migrations.AddField(
            model_name='enrollee',
            name='father',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='enrollee.parentdata', verbose_name='Сведения об отце'),
        ),
        migrations.AddField(
            model_name='enrollee',
            name='gos_olympiad_status',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='enrollee.gosolympiadstatus', verbose_name='Участие в государственных олимпиадах'),
        ),
        migrations.AddField(
            model_name='enrollee',
            name='graduated_institution',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='enrollee.graduatedinstitution', verbose_name='Окончил'),
        ),
        migrations.AddField(
            model_name='enrollee',
            name='mother',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='enrollee.parentdata', verbose_name='Сведения о матери'),
        ),
        migrations.AddField(
            model_name='enrollee',
            name='passport',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='enrollee.enrolleepassport', verbose_name='Паспорт'),
        ),
        migrations.AddField(
            model_name='enrollee',
            name='wsr_olympiad_status',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='enrollee.wsrolympiadsstatus', verbose_name='Участие в чемпионате "Молодые профессионалы (WSR)"'),
        ),
    ]
